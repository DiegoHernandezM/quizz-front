{"version":3,"file":"static/js/975.d6f28b45.chunk.js","mappings":"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","sources":["pages/charts/Chartjs/LineChart.js","pages/charts/Chartjs/BarChart.js","pages/charts/Chartjs/DoughnutChart.js","pages/charts/Chartjs/PieChart.js","pages/charts/Chartjs/RadarChart.js","../node_modules/@mui/material/colors/yellow.js","pages/charts/Chartjs/PolarChart.js","pages/charts/Chartjs/index.js"],"sourcesContent":["import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { withTheme } from \"@emotion/react\";\r\nimport { Line } from \"react-chartjs-2\";\r\n\r\nimport { CardContent, Card as MuiCard, Typography } from \"@mui/material\";\r\nimport { spacing } from \"@mui/system\";\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Spacer = styled.div(spacing);\r\n\r\nconst ChartWrapper = styled.div`\r\n  height: 300px;\r\n`;\r\n\r\nfunction LineChart({ theme }) {\r\n  const data = {\r\n    labels: [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ],\r\n    datasets: [\r\n      {\r\n        label: \"Sales ($)\",\r\n        fill: true,\r\n        backgroundColor: \"transparent\",\r\n        borderColor: theme.palette.secondary.main,\r\n        tension: 0.4,\r\n        data: [\r\n          2115, 1562, 1584, 1892, 1487, 2223, 2966, 2448, 2905, 3838, 2917,\r\n          3327,\r\n        ],\r\n      },\r\n      {\r\n        label: \"Orders\",\r\n        fill: true,\r\n        backgroundColor: \"transparent\",\r\n        borderColor: theme.palette.grey[500],\r\n        borderDash: [4, 4],\r\n        tension: 0.4,\r\n        data: [\r\n          958, 724, 629, 883, 915, 1214, 1476, 1212, 1554, 2128, 1466, 1827,\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n    scales: {\r\n      x: {\r\n        grid: {\r\n          color: \"rgba(0,0,0,0.05)\",\r\n        },\r\n      },\r\n      y: {\r\n        display: true,\r\n        borderDash: [5, 5],\r\n        grid: {\r\n          color: \"rgba(0,0,0,0)\",\r\n          fontColor: \"#fff\",\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Card mb={1}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Line Chart\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          A line chart is a way of plotting data points on a line.\r\n        </Typography>\r\n\r\n        <Spacer mb={6} />\r\n\r\n        <ChartWrapper>\r\n          <Line data={data} options={options} />\r\n        </ChartWrapper>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default withTheme(LineChart);\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { withTheme } from \"@emotion/react\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nimport { CardContent, Card as MuiCard, Typography } from \"@mui/material\";\r\nimport { spacing } from \"@mui/system\";\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Spacer = styled.div(spacing);\r\n\r\nconst ChartWrapper = styled.div`\r\n  height: 300px;\r\n  width: 100%;\r\n`;\r\n\r\nconst BarChart = ({ theme }) => {\r\n  const data = {\r\n    labels: [\r\n      \"Jan\",\r\n      \"Feb\",\r\n      \"Mar\",\r\n      \"Apr\",\r\n      \"May\",\r\n      \"Jun\",\r\n      \"Jul\",\r\n      \"Aug\",\r\n      \"Sep\",\r\n      \"Oct\",\r\n      \"Nov\",\r\n      \"Dec\",\r\n    ],\r\n    datasets: [\r\n      {\r\n        label: \"Last year\",\r\n        backgroundColor: theme.palette.secondary.main,\r\n        borderColor: theme.palette.secondary.main,\r\n        hoverBackgroundColor: theme.palette.secondary.main,\r\n        hoverBorderColor: theme.palette.secondary.main,\r\n        data: [54, 67, 41, 55, 62, 45, 55, 73, 60, 76, 48, 79],\r\n        barPercentage: 0.75,\r\n        categoryPercentage: 0.5,\r\n      },\r\n      {\r\n        label: \"This year\",\r\n        backgroundColor: theme.palette.grey[300],\r\n        borderColor: theme.palette.grey[300],\r\n        hoverBackgroundColor: theme.palette.grey[300],\r\n        hoverBorderColor: theme.palette.grey[300],\r\n        data: [69, 66, 24, 48, 52, 51, 44, 53, 62, 79, 51, 68],\r\n        barPercentage: 0.75,\r\n        categoryPercentage: 0.5,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n    scales: {\r\n      y: {\r\n        grid: {\r\n          display: false,\r\n        },\r\n        stacked: false,\r\n        ticks: {\r\n          stepSize: 20,\r\n        },\r\n      },\r\n\r\n      x: {\r\n        stacked: false,\r\n        grid: {\r\n          color: \"transparent\",\r\n        },\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Card mb={1}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Bar Chart\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          A bar chart provides a way of showing data values represented as\r\n          vertical bars.\r\n        </Typography>\r\n\r\n        <Spacer mb={6} />\r\n\r\n        <ChartWrapper>\r\n          <Bar data={data} options={options} />\r\n        </ChartWrapper>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default withTheme(BarChart);\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { withTheme } from \"@emotion/react\";\r\nimport { Doughnut } from \"react-chartjs-2\";\r\n\r\nimport { CardContent, Card as MuiCard, Typography } from \"@mui/material\";\r\nimport { orange, red } from \"@mui/material/colors\";\r\nimport { spacing } from \"@mui/system\";\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Spacer = styled.div(spacing);\r\n\r\nconst ChartWrapper = styled.div`\r\n  height: 300px;\r\n`;\r\n\r\nfunction DoughnutChart({ theme }) {\r\n  const data = {\r\n    labels: [\"Social\", \"Search Engines\", \"Direct\", \"Other\"],\r\n    datasets: [\r\n      {\r\n        data: [260, 125, 54, 146],\r\n        backgroundColor: [\r\n          theme.palette.secondary.main,\r\n          orange[500],\r\n          red[500],\r\n          theme.palette.grey[300],\r\n        ],\r\n        borderColor: \"transparent\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    maintainAspectRatio: false,\r\n    cutout: \"65%\",\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Card mb={1}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Doughnut Chart\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Doughnut charts are excellent at showing the relational proportions\r\n          between data.\r\n        </Typography>\r\n\r\n        <Spacer mb={6} />\r\n\r\n        <ChartWrapper>\r\n          <Doughnut data={data} options={options} />\r\n        </ChartWrapper>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default withTheme(DoughnutChart);\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { withTheme } from \"@emotion/react\";\r\nimport { Pie } from \"react-chartjs-2\";\r\n\r\nimport { CardContent, Card as MuiCard, Typography } from \"@mui/material\";\r\nimport { spacing } from \"@mui/system\";\r\nimport { orange, red } from \"@mui/material/colors\";\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Spacer = styled.div(spacing);\r\n\r\nconst ChartWrapper = styled.div`\r\n  height: 300px;\r\n`;\r\n\r\nfunction PieChart({ theme }) {\r\n  const data = {\r\n    labels: [\"Social\", \"Search Engines\", \"Direct\", \"Other\"],\r\n    datasets: [\r\n      {\r\n        data: [260, 125, 54, 146],\r\n        backgroundColor: [\r\n          theme.palette.secondary.main,\r\n          orange[500],\r\n          red[500],\r\n          theme.palette.grey[300],\r\n        ],\r\n        borderColor: \"transparent\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = {\r\n    maintainAspectRatio: false,\r\n    plugins: {\r\n      legend: {\r\n        display: false,\r\n      },\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Card mb={1}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Pie Chart\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Pie charts are excellent at showing the relational proportions between\r\n          data.\r\n        </Typography>\r\n\r\n        <Spacer mb={6} />\r\n\r\n        <ChartWrapper>\r\n          <Pie data={data} options={options} />\r\n        </ChartWrapper>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default withTheme(PieChart);\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { withTheme } from \"@emotion/react\";\r\nimport { Radar } from \"react-chartjs-2\";\r\n\r\nimport { CardContent, Card as MuiCard, Typography } from \"@mui/material\";\r\nimport { lighten } from \"@mui/material/styles\";\r\nimport { spacing } from \"@mui/system\";\r\nimport { orange } from \"@mui/material/colors\";\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Spacer = styled.div(spacing);\r\n\r\nconst ChartWrapper = styled.div`\r\n  height: 300px;\r\n`;\r\n\r\nfunction RadarChart({ theme }) {\r\n  const data = {\r\n    labels: [\"Speed\", \"Reliability\", \"Comfort\", \"Safety\", \"Efficiency\"],\r\n    datasets: [\r\n      {\r\n        label: \"Model X\",\r\n        backgroundColor: lighten(theme.palette.secondary.main, 0.33),\r\n        borderColor: theme.palette.secondary.main,\r\n        pointBackgroundColor: theme.palette.secondary.main,\r\n        pointBorderColor: \"#fff\",\r\n        pointHoverBackgroundColor: \"#fff\",\r\n        pointHoverBorderColor: theme.palette.secondary.main,\r\n        data: [70, 53, 82, 60, 33],\r\n      },\r\n      {\r\n        label: \"Model S\",\r\n        backgroundColor: lighten(orange[600], 0.33),\r\n        borderColor: orange[600],\r\n        pointBackgroundColor: orange[600],\r\n        pointBorderColor: \"#fff\",\r\n        pointHoverBackgroundColor: \"#fff\",\r\n        pointHoverBorderColor: orange[600],\r\n        data: [35, 38, 65, 85, 84],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = { maintainAspectRatio: false };\r\n\r\n  return (\r\n    <Card mb={1}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Radar Chart\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          A radar chart is a way of showing multiple data points and the\r\n          variation between them.\r\n        </Typography>\r\n\r\n        <Spacer mb={6} />\r\n\r\n        <ChartWrapper>\r\n          <Radar data={data} options={options} />\r\n        </ChartWrapper>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default withTheme(RadarChart);\r\n","const yellow = {\n  50: '#fffde7',\n  100: '#fff9c4',\n  200: '#fff59d',\n  300: '#fff176',\n  400: '#ffee58',\n  500: '#ffeb3b',\n  600: '#fdd835',\n  700: '#fbc02d',\n  800: '#f9a825',\n  900: '#f57f17',\n  A100: '#ffff8d',\n  A200: '#ffff00',\n  A400: '#ffea00',\n  A700: '#ffd600'\n};\nexport default yellow;","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { withTheme } from \"@emotion/react\";\r\nimport { PolarArea } from \"react-chartjs-2\";\r\n\r\nimport { CardContent, Card as MuiCard, Typography } from \"@mui/material\";\r\nimport { orange, red, yellow } from \"@mui/material/colors\";\r\nimport { spacing } from \"@mui/system\";\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Spacer = styled.div(spacing);\r\n\r\nconst ChartWrapper = styled.div`\r\n  height: 300px;\r\n`;\r\n\r\nfunction PolarChart({ theme }) {\r\n  const data = {\r\n    labels: [\"Speed\", \"Reliability\", \"Comfort\", \"Safety\", \"Efficiency\"],\r\n    datasets: [\r\n      {\r\n        label: \"Model S\",\r\n        data: [35, 38, 65, 70, 24],\r\n        backgroundColor: [\r\n          theme.palette.secondary.main,\r\n          yellow[700],\r\n          orange[500],\r\n          red[500],\r\n          theme.palette.grey[300],\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const options = { maintainAspectRatio: false };\r\n\r\n  return (\r\n    <Card mb={1}>\r\n      <CardContent>\r\n        <Typography variant=\"h6\" gutterBottom>\r\n          Polar Area Chart\r\n        </Typography>\r\n        <Typography variant=\"body2\" gutterBottom>\r\n          Polar area charts are similar to pie charts, but each segment has the\r\n          same angle.\r\n        </Typography>\r\n\r\n        <Spacer mb={6} />\r\n\r\n        <ChartWrapper>\r\n          <PolarArea data={data} options={options} />\r\n        </ChartWrapper>\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n}\r\n\r\nexport default withTheme(PolarChart);\r\n","import React from \"react\";\r\nimport styled from \"@emotion/styled\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nimport {\r\n  Grid,\r\n  Link,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Divider as MuiDivider,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { spacing } from \"@mui/system\";\r\n\r\nimport LineChart from \"./LineChart\";\r\nimport BarChart from \"./BarChart\";\r\nimport DoughnutChart from \"./DoughnutChart\";\r\nimport PieChart from \"./PieChart\";\r\nimport RadarChart from \"./RadarChart\";\r\nimport PolarChart from \"./PolarChart\";\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nfunction ChartJs() {\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet title=\"Chart.js\" />\r\n      <Typography variant=\"h3\" gutterBottom display=\"inline\">\r\n        Chart.js\r\n      </Typography>\r\n\r\n      <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\r\n        <Link component={NavLink} to=\"/\">\r\n          Dashboard\r\n        </Link>\r\n        <Link component={NavLink} to=\"/\">\r\n          Charts\r\n        </Link>\r\n        <Typography>Chart.js</Typography>\r\n      </Breadcrumbs>\r\n\r\n      <Divider my={6} />\r\n\r\n      <Grid container spacing={6}>\r\n        <Grid item xs={12} md={6}>\r\n          <LineChart />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <BarChart />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <DoughnutChart />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <PieChart />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <RadarChart />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <PolarChart />\r\n        </Grid>\r\n      </Grid>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default ChartJs;\r\n"],"names":["Card","styled","MuiCard","spacing","Spacer","ChartWrapper","withTheme","_ref","theme","data","labels","datasets","label","fill","backgroundColor","borderColor","palette","secondary","main","tension","grey","borderDash","_jsx","mb","children","_jsxs","CardContent","Typography","variant","gutterBottom","Line","options","maintainAspectRatio","plugins","legend","display","scales","x","grid","color","y","fontColor","hoverBackgroundColor","hoverBorderColor","barPercentage","categoryPercentage","Bar","stacked","ticks","stepSize","orange","red","Doughnut","cutout","Pie","lighten","pointBackgroundColor","pointBorderColor","pointHoverBackgroundColor","pointHoverBorderColor","Radar","A100","A200","A400","A700","yellow","PolarArea","Divider","MuiDivider","Breadcrumbs","MuiBreadcrumbs","React","Helmet","title","mt","Link","component","NavLink","to","my","Grid","container","item","xs","md","LineChart","BarChart","DoughnutChart","PieChart","RadarChart","PolarChart"],"sourceRoot":""}