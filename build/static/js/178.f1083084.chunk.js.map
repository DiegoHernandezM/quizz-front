{"version":3,"file":"static/js/178.f1083084.chunk.js","mappings":"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","sources":["../node_modules/@mui/icons-material/esm/RestoreFromTrash.js","components/general/Confirm.js","components/subject/SubjectForm.js","pages/dashboards/Subjects/index.js"],"sourcesContent":["import createSvgIcon from './utils/createSvgIcon';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon( /*#__PURE__*/_jsx(\"path\", {\n  d: \"M19 4h-3.5l-1-1h-5l-1 1H5v2h14zM6 7v12c0 1.1.9 2 2 2h8c1.1 0 2-.9 2-2V7H6zm8 7v4h-4v-4H8l4-4 4 4h-2z\"\n}), 'RestoreFromTrash');","import PropTypes from 'prop-types';\nimport {\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  Button,\n  useMediaQuery,\n  useTheme\n} from '@mui/material';\n\nConfirm.propTypes = {\n  open: PropTypes.bool,\n  close: PropTypes.func,\n  title: PropTypes.string,\n  body: PropTypes.string,\n  agree: PropTypes.func\n};\n\nexport default function Confirm({ open, close, title, body, agree }) {\n  const theme = useTheme();\n  const fullScreen = useMediaQuery(theme.breakpoints.down('md'));\n  return (\n    <div>\n      <Dialog fullScreen={fullScreen} open={open} onClose={close} aria-labelledby=\"responsive-dialog-title\">\n        <DialogTitle id=\"responsive-dialog-title\">{title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText>{body}</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button autoFocus onClick={close}>\n            Cancelar\n          </Button>\n          <Button onClick={agree} autoFocus>\n            Aceptar\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\n// material\nimport { Box, Button, Drawer, FormControl, TextField, Typography, IconButton } from '@mui/material';\nimport { Close } from '@mui/icons-material';\nimport * as yup from 'yup';\nimport { useFormik } from 'formik';\n// ----------------------------------------------------------------------\n\nSubjectForm.propTypes = {\n  open: PropTypes.bool,\n  close: PropTypes.func,\n  parentCallback: PropTypes.any,\n  subject: PropTypes.object,\n  update: PropTypes.bool,\n  updateRegister: PropTypes.func\n};\n\nexport default function SubjectForm({\n  open,\n  close,\n  parentCallback,\n  subject,\n  update,\n  updateRegister\n}) {\n  const validationSchema = yup.object({\n    name: yup.string('Nombre').required('El nombre es requerido'),\n  });\n  const formik = useFormik({\n    initialValues: {\n      name: ''\n    },\n    validationSchema,\n    onSubmit: (values, { resetForm }) => {\n      if (!update) {\n        parentCallback(values);\n      } else {\n        updateRegister(values);\n      }\n      resetForm(formik.initialValues);\n    }\n  });\n\n  useEffect(() => {  \n    formik.setFieldValue('name', update ? subject.name : formik.initialValues.name);\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [update, subject]);\n\n  return (\n    <Drawer anchor=\"right\" open={open} onClose={close}>\n      <Box sx={{ width: { xs: '100%', md: '500px', xl: '600px' }, padding: \"10px\" }}>\n        <form noValidate autoComplete=\"off\" onSubmit={formik.handleSubmit}>\n          <Box\n            style={{\n              display: 'flex',\n              flexDirection: 'row',\n              flexWrap: 'nowrap',\n              justifyContent: 'space-between'\n            }}\n          >\n            <Typography variant=\"h4\" style={{ marginTop: '10px', marginBottom: '30px' }}>\n              {update ? 'Actualizar' : 'Nuevo'}\n            </Typography>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              type=\"submit\"\n              style={{\n                borderRadius: 30,\n                height: '30px',\n                marginTop: '10px',\n                marginLeft: '10px',\n                marginBottom: '30px'\n              }}\n              size=\"small\"\n            >\n              {update ? 'Actualizar' : 'Guardar'}\n            </Button>\n            <IconButton\n              aria-label=\"close\"\n              onClick={close}\n              sx={{\n                color: (theme) => theme.palette.grey[500]\n              }}\n              style={{ marginTop: '10px', marginBottom: '30px' }}\n            >\n              <Close />\n            </IconButton>\n          </Box>\n          <FormControl style={{ marginTop: '8px', width: '100%' }}>\n            <TextField\n              id=\"name\"\n              name=\"name\"\n              label=\"Nombre\"\n              value={formik.values.name || ''}\n              onChange={formik.handleChange}\n              error={formik.touched.name && Boolean(formik.errors.name)}\n              fullWidth\n              helperText={formik.touched.name && formik.errors.name}\n              size=\"small\"\n            />\n          </FormControl>\n        </form>\n      </Box>\n    </Drawer>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport styled from \"@emotion/styled\";\nimport { NavLink } from \"react-router-dom\";\nimport { Helmet } from \"react-helmet-async\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { getSubjects, getDeleteSubject, getRestoreSubject, getSubject, update, create } from \"../../../redux/slices/subjects\";\n\nimport {\n  Button,\n  Link,\n  Breadcrumbs as MuiBreadcrumbs,\n  Card as MuiCard,\n  CardContent as MuiCardContent,\n  Divider as MuiDivider,\n  Paper as MuiPaper,\n  Typography,\n  Tooltip,\n  IconButton\n} from \"@mui/material\";\nimport { Delete, RestoreFromTrash } from '@mui/icons-material';\nimport { red } from '@mui/material/colors';\nimport { DataGrid, esES } from \"@mui/x-data-grid\";\nimport { spacing } from \"@mui/system\";\nimport QuickSearch from '../../tables/QuickSearch';\nimport Confirm from \"../../../components/general/Confirm\";\nimport SubjectForm from \"../../../components/subject/SubjectForm\";\n\nconst Card = styled(MuiCard)(spacing);\n\nconst CardContent = styled(MuiCardContent)(spacing);\n\nconst Divider = styled(MuiDivider)(spacing);\n\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\n\nconst Paper = styled(MuiPaper)(spacing);\n\nconst filters = {\n    pinter: {\n      cursor: 'pointer',\n      marginLeft: '5px',\n      textAlign: 'center'\n    }\n};\n\nfunction escapeRegExp(value) {\n  return value.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, '\\\\$&');\n}\n\nfunction Subjects() {\n  const dispatch = useDispatch();\n  const { allSubjects, subject } = useSelector((state) => state.subjects);\n  const [searchText, setSearchText] = useState('');\n  const [rows, setRows] = useState([]);\n  const [openConfirm, setOpenConfirm] = useState(false);\n  const [titleDialog, setTitleDialog] = useState('');\n  const [bodyDialog, setBodyDialog] = useState('');\n  const [restore, setRestore] = useState(false);\n  const [id, setId] = useState(0);\n  const [openForm, setOpenForm] = useState(false);\n  const [modeUpdate, setModeUpdate] = useState(false);\n\n  useEffect(() => {\n    dispatch(getSubjects());\n  }, []);\n\n  const handleRestore = (id) => {\n    // dispatch(restoreU(id));\n    console.log(id);\n  };\n\n  const handleDelete = (id) => {\n    \n    console.log(id);\n  };\n\n  const handleOpenConfirm = () => {\n    setOpenConfirm(true);\n  };\n\n  const handleCloseConfirm = () => {\n    setOpenConfirm(false);\n  };\n\n  const requestSearch = (searchValue) => {\n    setSearchText(searchValue);\n    const searchRegex = new RegExp(escapeRegExp(searchValue), 'i');\n    const filteredRows = allSubjects.filter((row) => Object.keys(row).some((field) => searchRegex.test(row[field])));\n    setRows(filteredRows);\n  };\n\n  const columns = [\n    { field: \"id\", headerName: \"ID\", width: 150 },\n    {\n      field: \"name\",\n      headerName: \"Materia\",\n      width: 400,\n      editable: false,\n    },\n    {\n      field: 'action',\n      headerName: 'Acciones',\n      sortable: false,\n      disableExport: true,\n      width: 300,\n      renderCell: (params) => {\n        const onClickDelete = (e) => {\n          console.log(\"ok\");\n          e.stopPropagation();\n          setRestore(false);\n          handleOpenConfirm();\n          setTitleDialog('Eliminar Materia');\n          setBodyDialog('¿Desea eliminar el registro?');\n          setId(params.row.id);\n        };\n        const onClickRestore = (e) => {\n          e.stopPropagation();\n          handleOpenConfirm();\n          setRestore(true);\n          setTitleDialog('Recuperar Materia');\n          setBodyDialog('¿Desea recuperar el registro?');\n          setId(params.row.id);\n        };\n        return (\n          <>\n            <Tooltip key={`re-${params.row.id}`} title=\"Eliminar\">\n              <div>\n                <IconButton\n                  disabled={params.row.deleted_at !== null}\n                  onClick={onClickDelete}\n                  key={`delete-${params.row.id}`}\n                  type=\"button\"\n                  color=\"danger\"\n                  style={filters.pinter}\n                  sx={{ color: red[500] }}\n                >\n                  <Delete />\n                </IconButton>\n              </div>\n            </Tooltip>\n            <Tooltip key={`res-${params.row.id}`} title=\"Recuperar\">\n              <div>\n                <IconButton\n                  disabled={params.row.deleted_at === null}\n                  color=\"primary\"\n                  onClick={onClickRestore}\n                  key={`restore-${params.row.id}`}\n                  type=\"button\"\n                  style={filters.pinter}\n                >\n                  <RestoreFromTrash />\n                </IconButton>\n              </div>\n            </Tooltip>\n          </>\n        );\n      }\n    }\n  ];\n  function deleteS(id) {\n    return (dispatch) =>\n      new Promise((resolve) => {\n        resolve(dispatch(getDeleteSubject(id)));\n      })\n        .then(() => {\n          dispatch(getSubjects());\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n  }\n\n  function restoreS(id) {\n    return (dispatch) =>\n      new Promise((resolve) => {\n        resolve(dispatch(getRestoreSubject(id)));\n      })\n        .then(() => {\n          dispatch(getSubjects());\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n  }\n\n  const handleCloseAccept = () => {\n    if (restore) {\n      dispatch(restoreS(id));\n    } else {\n      dispatch(deleteS(id));\n    }\n    setOpenConfirm(false);\n  };\n\n  const handleCallback = (values) => {\n    dispatch(createSubject(values));\n  };\n\n  function updateSubject(values) {\n    return (dispatch) =>\n      new Promise((resolve) => {\n        resolve(dispatch(update(id, values)));\n      })\n        .then((response) => {\n          dispatch(getSubjects());\n          setOpenForm(false);\n          setModeUpdate(false);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n  }\n\n  function createSubject(values) {\n    return (dispatch) =>\n      new Promise((resolve) => {\n        resolve(dispatch(create(values)));\n      })\n        .then((response) => {\n          dispatch(getSubjects());\n          setOpenForm(false);\n          setModeUpdate(false);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n  }\n\n  const handleUpdate = (values) => {\n    dispatch(updateSubject(values));\n  };\n\n  return (\n    <>\n      <Card mb={6}>\n        <CardContent pb={1}>\n          <Button variant=\"contained\" sx={{ marginBottom: \"10px\" }} onClick={()=> {\n              setOpenForm(true);\n              setModeUpdate(false);\n            }}>\n            Nueva materia\n          </Button>\n        </CardContent>\n        <Paper>\n          <div style={{ height: 400, width: \"100%\" }}>\n            <DataGrid\n              components={{\n                Toolbar: QuickSearch\n              }}\n              initialState={{\n                pagination: { paginationModel: { page: 0, pageSize: 5 } },\n              }}\n              localeText={esES.components.MuiDataGrid.defaultProps.localeText}\n              pageSizeOptions={[5, 10, 25]}\n              rows={rows.length > 0 ? rows : allSubjects}\n              rowHeight={40}\n              columns={columns}\n              onRowDoubleClick={(params) => {\n                setId(params.row.id);\n                dispatch(getSubject(params.row.id));\n                setModeUpdate(true);\n                setOpenForm(true);\n              }}\n              componentsProps={{\n                hideFooterPagination: false,\n                toolbar: {\n                  export: false,\n                  columns: true,\n                  density: true,\n                  search: true,\n                  value: searchText,\n                  onChange: (event) => requestSearch(event.target.value),\n                  clearSearch: () => requestSearch('')\n                }\n              }}\n              pageSize={10}\n            />\n          </div>\n        </Paper>\n      </Card>\n      <Confirm\n        open={openConfirm}\n        close={handleCloseConfirm}\n        title={titleDialog}\n        body={bodyDialog}\n        agree={handleCloseAccept}\n      />\n      <SubjectForm\n        open={openForm}\n        close={() => setOpenForm(false)}\n        parentCallback={handleCallback}\n        subject={subject}\n        update={modeUpdate}\n        updateRegister={handleUpdate}\n      />\n    </>\n  );\n}\n\nfunction SubjectsPage() {\n  return (\n    <React.Fragment>\n      <Helmet title=\"Data Grid\" />\n      <Typography variant=\"h3\" gutterBottom display=\"inline\">\n        Lista de Materias\n      </Typography>\n\n      <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\n        <Link component={NavLink} to=\"/\">\n          Dashboard\n        </Link>\n        <Typography>Materias</Typography>\n      </Breadcrumbs>\n\n      <Divider my={6} />\n\n      <Subjects />\n    </React.Fragment>\n  );\n}\n\nexport default SubjectsPage;\n"],"names":["createSvgIcon","_jsx","d","Confirm","_ref","open","close","title","body","agree","theme","useTheme","fullScreen","useMediaQuery","breakpoints","down","children","_jsxs","Dialog","onClose","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","autoFocus","onClick","SubjectForm","parentCallback","subject","update","updateRegister","validationSchema","yup","name","required","formik","useFormik","initialValues","onSubmit","values","_ref2","resetForm","useEffect","setFieldValue","Drawer","anchor","Box","sx","width","xs","md","xl","padding","noValidate","autoComplete","handleSubmit","style","display","flexDirection","flexWrap","justifyContent","Typography","variant","marginTop","marginBottom","color","type","borderRadius","height","marginLeft","size","IconButton","palette","grey","Close","FormControl","TextField","label","value","onChange","handleChange","error","touched","Boolean","errors","fullWidth","helperText","Card","styled","MuiCard","spacing","CardContent","MuiCardContent","Divider","MuiDivider","Breadcrumbs","MuiBreadcrumbs","Paper","MuiPaper","filters","pinter","cursor","textAlign","Subjects","dispatch","useDispatch","allSubjects","useSelector","state","subjects","searchText","setSearchText","useState","rows","setRows","openConfirm","setOpenConfirm","titleDialog","setTitleDialog","bodyDialog","setBodyDialog","restore","setRestore","setId","openForm","setOpenForm","modeUpdate","setModeUpdate","getSubjects","handleOpenConfirm","requestSearch","searchValue","searchRegex","RegExp","replace","filteredRows","filter","row","Object","keys","some","field","test","columns","headerName","editable","sortable","disableExport","renderCell","params","_Fragment","Tooltip","disabled","deleted_at","e","console","log","stopPropagation","red","Delete","RestoreFromTrash","mb","pb","DataGrid","components","Toolbar","QuickSearch","initialState","pagination","paginationModel","page","pageSize","localeText","esES","pageSizeOptions","length","rowHeight","onRowDoubleClick","getSubject","componentsProps","hideFooterPagination","toolbar","export","density","search","event","target","clearSearch","handleCloseConfirm","handleCloseAccept","Promise","resolve","getRestoreSubject","then","catch","restoreS","getDeleteSubject","deleteS","create","response","createSubject","updateSubject","React","Helmet","gutterBottom","mt","Link","component","NavLink","to","my"],"sourceRoot":""}