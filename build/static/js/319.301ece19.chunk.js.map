{"version":3,"file":"static/js/319.301ece19.chunk.js","mappings":"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","sources":["pages/forms/Formik.js"],"sourcesContent":["import React from \"react\";\r\nimport * as Yup from \"yup\";\r\nimport styled from \"@emotion/styled\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Formik } from \"formik\";\r\nimport { Helmet } from \"react-helmet-async\";\r\n\r\nimport {\r\n  Alert as MuiAlert,\r\n  Box,\r\n  Breadcrumbs as MuiBreadcrumbs,\r\n  Button as MuiButton,\r\n  Card as MuiCard,\r\n  CardContent,\r\n  CircularProgress,\r\n  Divider as MuiDivider,\r\n  Grid,\r\n  Link,\r\n  TextField as MuiTextField,\r\n  Typography,\r\n} from \"@mui/material\";\r\nimport { spacing } from \"@mui/system\";\r\n\r\nconst Divider = styled(MuiDivider)(spacing);\r\n\r\nconst Breadcrumbs = styled(MuiBreadcrumbs)(spacing);\r\n\r\nconst Card = styled(MuiCard)(spacing);\r\n\r\nconst Alert = styled(MuiAlert)(spacing);\r\n\r\nconst TextField = styled(MuiTextField)(spacing);\r\n\r\nconst Button = styled(MuiButton)(spacing);\r\n\r\nconst timeOut = (time) => new Promise((res) => setTimeout(res, time));\r\n\r\nconst initialValues = {\r\n  firstName: \"Lucy\",\r\n  lastName: \"Lavender\",\r\n  email: \"lucylavender@gmail.com\",\r\n  password: \"mypassword123\",\r\n  confirmPassword: \"mypassword123\",\r\n};\r\n\r\nconst validationSchema = Yup.object().shape({\r\n  firstName: Yup.string().required(\"Required\"),\r\n  lastName: Yup.string().required(\"Required\"),\r\n  email: Yup.string().email().required(\"Required\"),\r\n  password: Yup.string()\r\n    .min(12, \"Must be at least 12 characters\")\r\n    .max(255)\r\n    .required(\"Required\"),\r\n  confirmPassword: Yup.string().oneOf(\r\n    [Yup.ref(\"password\"), null],\r\n    \"Passwords must match\"\r\n  ),\r\n});\r\n\r\nfunction BasicForm() {\r\n  const handleSubmit = async (\r\n    values,\r\n    { resetForm, setErrors, setStatus, setSubmitting }\r\n  ) => {\r\n    try {\r\n      await timeOut(1500);\r\n      resetForm();\r\n      setStatus({ sent: true });\r\n      setSubmitting(false);\r\n    } catch (error) {\r\n      setStatus({ sent: false });\r\n      setErrors({ submit: error.message });\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Formik\r\n      initialValues={initialValues}\r\n      validationSchema={validationSchema}\r\n      onSubmit={handleSubmit}\r\n    >\r\n      {({\r\n        errors,\r\n        handleBlur,\r\n        handleChange,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        touched,\r\n        values,\r\n        status,\r\n      }) => (\r\n        <Card mb={6}>\r\n          <CardContent>\r\n            <Typography variant=\"h6\" gutterBottom>\r\n              Formik\r\n            </Typography>\r\n            <Typography variant=\"body2\" gutterBottom>\r\n              Formik example with Yup validation\r\n            </Typography>\r\n\r\n            {status && status.sent && (\r\n              <Alert severity=\"success\" my={3}>\r\n                [DEMO] Your data has been submitted successfully!\r\n              </Alert>\r\n            )}\r\n\r\n            {isSubmitting ? (\r\n              <Box display=\"flex\" justifyContent=\"center\" my={6}>\r\n                <CircularProgress />\r\n              </Box>\r\n            ) : (\r\n              <form onSubmit={handleSubmit}>\r\n                <Grid container spacing={6}>\r\n                  <Grid item md={6}>\r\n                    <TextField\r\n                      name=\"firstName\"\r\n                      label=\"First Name\"\r\n                      value={values.firstName}\r\n                      error={Boolean(touched.firstName && errors.firstName)}\r\n                      fullWidth\r\n                      helperText={touched.firstName && errors.firstName}\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      variant=\"outlined\"\r\n                      my={2}\r\n                    />\r\n                  </Grid>\r\n                  <Grid item md={6}>\r\n                    <TextField\r\n                      name=\"lastName\"\r\n                      label=\"Last Name\"\r\n                      value={values.lastName}\r\n                      error={Boolean(touched.lastName && errors.lastName)}\r\n                      fullWidth\r\n                      helperText={touched.lastName && errors.lastName}\r\n                      onBlur={handleBlur}\r\n                      onChange={handleChange}\r\n                      variant=\"outlined\"\r\n                      my={2}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <TextField\r\n                  name=\"email\"\r\n                  label=\"Email\"\r\n                  value={values.email}\r\n                  error={Boolean(touched.email && errors.email)}\r\n                  fullWidth\r\n                  helperText={touched.email && errors.email}\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"email\"\r\n                  variant=\"outlined\"\r\n                  my={2}\r\n                />\r\n\r\n                <TextField\r\n                  name=\"password\"\r\n                  label=\"Password\"\r\n                  value={values.password}\r\n                  error={Boolean(touched.password && errors.password)}\r\n                  fullWidth\r\n                  helperText={touched.password && errors.password}\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  variant=\"outlined\"\r\n                  my={2}\r\n                />\r\n\r\n                <TextField\r\n                  name=\"confirmPassword\"\r\n                  label=\"Confirm password\"\r\n                  value={values.confirmPassword}\r\n                  error={Boolean(\r\n                    touched.confirmPassword && errors.confirmPassword\r\n                  )}\r\n                  fullWidth\r\n                  helperText={touched.confirmPassword && errors.confirmPassword}\r\n                  onBlur={handleBlur}\r\n                  onChange={handleChange}\r\n                  type=\"password\"\r\n                  variant=\"outlined\"\r\n                  my={2}\r\n                />\r\n\r\n                <Button\r\n                  type=\"submit\"\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  mt={3}\r\n                >\r\n                  Save changes\r\n                </Button>\r\n              </form>\r\n            )}\r\n          </CardContent>\r\n        </Card>\r\n      )}\r\n    </Formik>\r\n  );\r\n}\r\n\r\nfunction FormikPage() {\r\n  return (\r\n    <React.Fragment>\r\n      <Helmet title=\"Formik\" />\r\n      <Typography variant=\"h3\" gutterBottom display=\"inline\">\r\n        Formik\r\n      </Typography>\r\n\r\n      <Breadcrumbs aria-label=\"Breadcrumb\" mt={2}>\r\n        <Link component={NavLink} to=\"/\">\r\n          Dashboard\r\n        </Link>\r\n        <Link component={NavLink} to=\"/\">\r\n          Forms\r\n        </Link>\r\n        <Typography>Formik</Typography>\r\n      </Breadcrumbs>\r\n\r\n      <Divider my={6} />\r\n\r\n      <BasicForm />\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default FormikPage;\r\n"],"names":["Divider","styled","MuiDivider","spacing","Breadcrumbs","MuiBreadcrumbs","Card","MuiCard","Alert","MuiAlert","TextField","MuiTextField","Button","MuiButton","timeOut","time","Promise","res","setTimeout","initialValues","firstName","lastName","email","password","confirmPassword","validationSchema","Yup","shape","required","min","max","oneOf","BasicForm","_jsx","Formik","onSubmit","async","values","_ref","resetForm","setErrors","setStatus","setSubmitting","sent","error","submit","message","children","_ref2","errors","handleBlur","handleChange","handleSubmit","isSubmitting","touched","status","mb","_jsxs","CardContent","Typography","variant","gutterBottom","severity","my","Box","display","justifyContent","CircularProgress","Grid","container","item","md","name","label","value","Boolean","fullWidth","helperText","onBlur","onChange","type","color","mt","React","Helmet","title","Link","component","NavLink","to"],"sourceRoot":""}